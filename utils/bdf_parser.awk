#!/usr/bin/awk -f
# Q&D script that converts a bdf font file into a c header file

BEGIN {
    print "#pragma once\n"
    print "#include <base/types.h>\n"

    print "// This file has been autogenerated by utils/bdf_parser.awk"
    print "// It contains printable non extended ASCII bitmaps\n"
}

# Parse the header
/^(FAMILY_NAME|COPYRIGHT|COMMENT).*/ {
    print "// " $0
}

# We're assuming that the bounding box is the same for all glyphs
# This approach works *fine* on most bdf files
/^(FONTBOUNDINGBOX).*/ {
    if ($2 > 32)
        error("Font is too __wide__!")

    width = $2
    height = $3
}

# Parse the bitmaps
/^(ENCODING).*/ {
    # Skip non ASCII chars
    if ($2 < 32 || $2 > 126) {
        current_ascii = 0
        next
    }

    count += 1
    current_line = height
    current_ascii = $2
    current_bitmap = "    { "
    next
}

/^[0-9|A-F]+$/ {
    if (!current_ascii)
        next

    current_line--
    current_bitmap = current_bitmap "0x"$0

    # Avoid trailing commas
    if (current_line)
        current_bitmap = current_bitmap ","

    current_bitmap = current_bitmap " "
    next
}

/^(ENDCHAR).*/ {
    if (!current_ascii)
        next

    current_bitmap = current_bitmap"}, // "current_ascii" ("sprintf("%c", current_ascii)")"
    bitmaps = bitmaps "\n" current_bitmap
    next
}

END {
    print "\n#define HEADER_FONT_WIDTH "width
    print "#define HEADER_FONT_HEIGHT "height"\n"

    print "static const u"width" header_font_bitmap["count"]["height"] = {"bitmaps"\n};"
}
